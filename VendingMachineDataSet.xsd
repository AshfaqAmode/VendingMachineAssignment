<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="VendingMachineDataSet" targetNamespace="http://tempuri.org/VendingMachineDataSet.xsd" xmlns:mstns="http://tempuri.org/VendingMachineDataSet.xsd" xmlns="http://tempuri.org/VendingMachineDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="VendingMachineConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="VendingMachineConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.VendingMachineAssignment.Properties.Settings.GlobalReference.Default.VendingMachineConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DrinksTableAdapter" GeneratorDataComponentClassName="DrinksTableAdapter" Name="Drinks" UserDataComponentName="DrinksTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="VendingMachineConnectionString (Settings)" DbObjectName="VendingMachine.dbo.Drinks" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Drinks] WHERE (([DrinkName] = @Original_DrinkName) AND ([DrinkPrice] = @Original_DrinkPrice))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_DrinkName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="DrinkName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DrinkPrice" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DrinkPrice" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Drinks] ([DrinkName], [DrinkPrice]) VALUES (@DrinkName, @DrinkPrice);
SELECT DrinkName, DrinkPrice FROM Drinks WHERE (DrinkName = @DrinkName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@DrinkName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="DrinkName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DrinkPrice" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DrinkPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT DrinkName, DrinkPrice FROM dbo.Drinks</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Drinks] SET [DrinkName] = @DrinkName, [DrinkPrice] = @DrinkPrice WHERE (([DrinkName] = @Original_DrinkName) AND ([DrinkPrice] = @Original_DrinkPrice));
SELECT DrinkName, DrinkPrice FROM Drinks WHERE (DrinkName = @DrinkName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@DrinkName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="DrinkName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DrinkPrice" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DrinkPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_DrinkName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="DrinkName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DrinkPrice" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DrinkPrice" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="DrinkName" DataSetColumn="DrinkName" />
              <Mapping SourceColumn="DrinkPrice" DataSetColumn="DrinkPrice" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="IngredientsTableAdapter" GeneratorDataComponentClassName="IngredientsTableAdapter" Name="Ingredients" UserDataComponentName="IngredientsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="VendingMachineConnectionString (Settings)" DbObjectName="VendingMachine.dbo.Ingredients" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Ingredients] WHERE (([IngredientName] = @Original_IngredientName) AND ([IngredientStock] = @Original_IngredientStock))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_IngredientName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="IngredientName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IngredientStock" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IngredientStock" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Ingredients] ([IngredientName], [IngredientStock]) VALUES (@IngredientName, @IngredientStock);
SELECT IngredientName, IngredientStock FROM Ingredients WHERE (IngredientName = @IngredientName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@IngredientName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="IngredientName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IngredientStock" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IngredientStock" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IngredientName, IngredientStock FROM dbo.Ingredients</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Ingredients] SET [IngredientName] = @IngredientName, [IngredientStock] = @IngredientStock WHERE (([IngredientName] = @Original_IngredientName) AND ([IngredientStock] = @Original_IngredientStock));
SELECT IngredientName, IngredientStock FROM Ingredients WHERE (IngredientName = @IngredientName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@IngredientName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="IngredientName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IngredientStock" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IngredientStock" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_IngredientName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="IngredientName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IngredientStock" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IngredientStock" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IngredientName" DataSetColumn="IngredientName" />
              <Mapping SourceColumn="IngredientStock" DataSetColumn="IngredientStock" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="VendingMachineDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="VendingMachineDataSet" msprop:Generator_DataSetName="VendingMachineDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Drinks" msprop:Generator_RowEvHandlerName="DrinksRowChangeEventHandler" msprop:Generator_RowDeletedName="DrinksRowDeleted" msprop:Generator_RowDeletingName="DrinksRowDeleting" msprop:Generator_RowEvArgName="DrinksRowChangeEvent" msprop:Generator_TablePropName="Drinks" msprop:Generator_RowChangedName="DrinksRowChanged" msprop:Generator_RowChangingName="DrinksRowChanging" msprop:Generator_TableClassName="DrinksDataTable" msprop:Generator_RowClassName="DrinksRow" msprop:Generator_TableVarName="tableDrinks" msprop:Generator_UserTableName="Drinks">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="DrinkName" msprop:Generator_ColumnPropNameInRow="DrinkName" msprop:Generator_ColumnPropNameInTable="DrinkNameColumn" msprop:Generator_ColumnVarNameInTable="columnDrinkName" msprop:Generator_UserColumnName="DrinkName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DrinkPrice" msprop:Generator_ColumnPropNameInRow="DrinkPrice" msprop:Generator_ColumnPropNameInTable="DrinkPriceColumn" msprop:Generator_ColumnVarNameInTable="columnDrinkPrice" msprop:Generator_UserColumnName="DrinkPrice" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Ingredients" msprop:Generator_RowEvHandlerName="IngredientsRowChangeEventHandler" msprop:Generator_RowDeletedName="IngredientsRowDeleted" msprop:Generator_RowDeletingName="IngredientsRowDeleting" msprop:Generator_RowEvArgName="IngredientsRowChangeEvent" msprop:Generator_TablePropName="Ingredients" msprop:Generator_RowChangedName="IngredientsRowChanged" msprop:Generator_RowChangingName="IngredientsRowChanging" msprop:Generator_TableClassName="IngredientsDataTable" msprop:Generator_RowClassName="IngredientsRow" msprop:Generator_TableVarName="tableIngredients" msprop:Generator_UserTableName="Ingredients">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IngredientName" msprop:Generator_ColumnPropNameInRow="IngredientName" msprop:Generator_ColumnPropNameInTable="IngredientNameColumn" msprop:Generator_ColumnVarNameInTable="columnIngredientName" msprop:Generator_UserColumnName="IngredientName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IngredientStock" msprop:Generator_ColumnPropNameInRow="IngredientStock" msprop:Generator_ColumnPropNameInTable="IngredientStockColumn" msprop:Generator_ColumnVarNameInTable="columnIngredientStock" msprop:Generator_UserColumnName="IngredientStock" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Drinks" />
      <xs:field xpath="mstns:DrinkName" />
    </xs:unique>
    <xs:unique name="Ingredients_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Ingredients" />
      <xs:field xpath="mstns:IngredientName" />
    </xs:unique>
  </xs:element>
</xs:schema>